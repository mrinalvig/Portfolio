{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.defaultProps = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _inlineStylePrefixer = _interopRequireDefault(require(\"inline-style-prefixer\"));\n\nvar _reactTransitionContext = require(\"react-transition-context\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst fillStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0\n};\nconst baseViewStyle = {\n  display: 'inline-block',\n  verticalAlign: 'top',\n  whiteSpace: 'normal',\n  width: '100%'\n};\nconst defaultProps = {\n  animateHeight: true,\n  transitionDuration: 500,\n  transitionTimingFunction: 'ease',\n  keepViewsMounted: false,\n  prefixer: new _inlineStylePrefixer.default(),\n  style: {},\n  viewportStyle: {},\n  rtl: false,\n  spacing: 1\n};\nexports.defaultProps = defaultProps;\n\nfunction applyDefaults(props) {\n  const result = _objectSpread({}, props);\n\n  for (const key in defaultProps) {\n    if (defaultProps.hasOwnProperty(key) && props[key] == null) {\n      result[key] = defaultProps[key];\n    }\n  }\n\n  return result;\n}\n\nclass ViewSlider extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      height: undefined,\n      transitioning: false,\n      activeView: this.props.activeView,\n      // this is used to determine the correct transitionState for the previous active view.\n      prevActiveView: null\n    });\n\n    _defineProperty(this, \"views\", []);\n\n    _defineProperty(this, \"timeouts\", {});\n\n    _defineProperty(this, \"lastProps\", this.props);\n\n    _defineProperty(this, \"getDefaultedProps\", () => {\n      if (this.lastProps !== this.props || !this.lastDefaultedProps) {\n        this.lastProps = this.props;\n        this.lastDefaultedProps = applyDefaults(this.props);\n      }\n\n      return this.lastDefaultedProps;\n    });\n\n    _defineProperty(this, \"measureHeight\", node => {\n      if (!node) return null;\n      return node.clientHeight;\n    });\n\n    _defineProperty(this, \"onTransitionEnd\", event => {\n      // ignore transitionend events from deeper components\n      if (event && event.target !== this.viewport) return; // phase 0: unset height and disable transitions\n\n      this.setState({\n        height: undefined,\n        prevActiveView: null,\n        transitioning: false\n      });\n    });\n\n    _defineProperty(this, \"getTransitionState\", childIndex => {\n      const {\n        activeView,\n        prevActiveView\n      } = this.state;\n      if (prevActiveView == null) return childIndex === activeView ? 'in' : 'out';\n      if (childIndex === activeView) return 'entering';\n      if (childIndex === prevActiveView) return 'leaving';\n      return 'out';\n    });\n\n    _defineProperty(this, \"renderView\", index => {\n      const {\n        fillParent,\n        prefixer,\n        keepViewsMounted,\n        spacing,\n        rtl,\n        viewStyle,\n        innerViewWrapperStyle\n      } = this.getDefaultedProps();\n      const {\n        activeView,\n        transitioning\n      } = this.state;\n\n      const style = _objectSpread({}, baseViewStyle, viewStyle);\n\n      if (fillParent) {\n        Object.assign(style, fillStyle);\n        style.overflow = 'auto';\n        if (rtl) style.right = `${index * spacing * 100}%`;else style.left = `${index * spacing * 100}%`;\n      } else if (index > 0) {\n        if (rtl) style.marginRight = `${(spacing - 1) * 100}%`;else style.marginLeft = `${(spacing - 1) * 100}%`;\n      } // when not transitioning, render empty placeholder divs before the active view to push it into the right\n      // horizontal position\n\n\n      if (!transitioning && activeView !== index && !keepViewsMounted) {\n        return React.createElement(\"div\", {\n          key: index,\n          style: prefixer.prefix(style)\n        });\n      }\n\n      return React.createElement(\"div\", {\n        key: index,\n        style: prefixer.prefix(style),\n        ref: c => this.views[index] = c\n      }, React.createElement(\"div\", {\n        style: prefixer.prefix(_objectSpread({\n          width: '100%'\n        }, innerViewWrapperStyle))\n      }, React.createElement(_reactTransitionContext.TransitionContext, {\n        state: this.getTransitionState(index)\n      }, this.props.renderView({\n        index,\n        active: index === activeView,\n        transitionState: this.getTransitionState(index)\n      }))));\n    });\n\n    _defineProperty(this, \"animateHeight\", () => {\n      const {\n        animateHeight,\n        fillParent,\n        keepViewsMounted\n      } = this.getDefaultedProps();\n      return animateHeight && !fillParent && !keepViewsMounted;\n    });\n\n    _defineProperty(this, \"rootRef\", node => {\n      this.root = node;\n      const {\n        rootRef\n      } = this.getDefaultedProps();\n      if (rootRef) rootRef(node);\n    });\n\n    _defineProperty(this, \"viewportRef\", node => {\n      this.viewport = node;\n      const {\n        viewportRef\n      } = this.getDefaultedProps();\n      if (viewportRef) viewportRef(node);\n    });\n  }\n\n  setTimeout(name, callback, delay) {\n    if (this.timeouts[name]) clearTimeout(this.timeouts[name]);\n    this.timeouts[name] = setTimeout(callback, delay);\n  }\n\n  componentDidUpdate() {\n    const {\n      activeView,\n      transitionDuration,\n      keepViewsMounted\n    } = this.getDefaultedProps();\n    let newState;\n\n    if (activeView !== this.state.activeView && this.state.height === undefined) {\n      if (keepViewsMounted) {\n        // scroll all views except the current back to the top\n        for (let i = 0; i < this.views.length; i++) {\n          if (i === this.state.activeView) continue;\n          if (this.views[i]) this.views[i].scrollTop = 0;\n        }\n      } // phase 1: set current height\n\n\n      newState = {\n        height: this.measureHeight(this.views[this.state.activeView])\n      };\n    } else if (this.state.height !== undefined && !this.state.transitioning) {\n      // phase 2: enable transitions\n      newState = {\n        transitioning: true\n      };\n    } else if (activeView !== this.state.activeView) {\n      // phase 3: change height/activeView\n      newState = {\n        activeView,\n        prevActiveView: this.state.activeView,\n        height: this.measureHeight(this.views[activeView])\n      };\n    }\n\n    const finalNewState = newState;\n    if (!finalNewState) return;\n    this.setState(finalNewState, () => {\n      if (finalNewState.activeView != null) {\n        this.setTimeout('onTransitionEnd', this.onTransitionEnd, transitionDuration);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    for (let name in this.timeouts) clearTimeout(this.timeouts[name]);\n  }\n\n  render() {\n    const {\n      style,\n      className,\n      viewportClassName,\n      viewportStyle,\n      numViews,\n      prefixer,\n      fillParent,\n      transitionDuration,\n      transitionTimingFunction,\n      keepViewsMounted,\n      rtl,\n      spacing\n    } = this.getDefaultedProps();\n    const animateHeight = this.animateHeight();\n    const {\n      activeView,\n      height,\n      transitioning\n    } = this.state;\n\n    const finalOuterStyle = _objectSpread({\n      transitionProperty: 'height',\n      transitionDuration: `${transitionDuration}ms`,\n      transitionTimingFunction,\n      overflow: 'hidden',\n      height: animateHeight && height != null ? height : undefined\n    }, style);\n\n    const finalViewportStyle = _objectSpread({\n      position: 'relative',\n      transform: `translateX(${activeView * spacing * (rtl ? 100 : -100)}%)`,\n      whiteSpace: 'nowrap',\n      minHeight: '100%',\n      direction: rtl ? 'rtl' : 'ltr',\n      transition: transitioning ? `transform ${transitionTimingFunction} ${transitionDuration}ms` : undefined\n    }, viewportStyle);\n\n    if (fillParent) {\n      Object.assign(finalOuterStyle, fillStyle);\n      Object.assign(finalViewportStyle, fillStyle);\n    } // when not transitioning, render empty placeholder divs before the active view to push it into the right\n    // horizontal position\n\n\n    const views = [];\n\n    for (let i = 0; i < (transitioning || keepViewsMounted ? numViews : activeView + 1); i++) {\n      views[i] = this.renderView(i);\n    }\n\n    return React.createElement(\"div\", {\n      style: prefixer.prefix(finalOuterStyle),\n      className: className,\n      ref: this.rootRef\n    }, React.createElement(\"div\", {\n      className: viewportClassName,\n      style: prefixer.prefix(finalViewportStyle),\n      ref: this.viewportRef,\n      onTransitionEnd: this.onTransitionEnd\n    }, views));\n  }\n\n}\n\nexports.default = ViewSlider;","map":{"version":3,"sources":["/Users/mrinalvig/Documents/Projects/portfolio2/node_modules/react-view-slider/es/index.js"],"names":["Object","defineProperty","exports","value","default","defaultProps","React","_interopRequireWildcard","require","_inlineStylePrefixer","_interopRequireDefault","_reactTransitionContext","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","enumerable","forEach","_defineProperty","configurable","writable","fillStyle","position","top","left","right","bottom","baseViewStyle","display","verticalAlign","whiteSpace","width","animateHeight","transitionDuration","transitionTimingFunction","keepViewsMounted","prefixer","style","viewportStyle","rtl","spacing","applyDefaults","props","result","ViewSlider","Component","constructor","args","height","undefined","transitioning","activeView","prevActiveView","lastProps","lastDefaultedProps","node","clientHeight","event","viewport","setState","childIndex","state","index","fillParent","viewStyle","innerViewWrapperStyle","getDefaultedProps","assign","overflow","marginRight","marginLeft","createElement","prefix","ref","c","views","TransitionContext","getTransitionState","renderView","active","transitionState","root","rootRef","viewportRef","setTimeout","name","callback","delay","timeouts","clearTimeout","componentDidUpdate","newState","scrollTop","measureHeight","finalNewState","onTransitionEnd","componentWillUnmount","render","className","viewportClassName","numViews","finalOuterStyle","transitionProperty","finalViewportStyle","transform","minHeight","direction","transition"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.defaultProps = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _inlineStylePrefixer = _interopRequireDefault(require(\"inline-style-prefixer\"));\n\nvar _reactTransitionContext = require(\"react-transition-context\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst fillStyle = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0\n};\nconst baseViewStyle = {\n  display: 'inline-block',\n  verticalAlign: 'top',\n  whiteSpace: 'normal',\n  width: '100%'\n};\nconst defaultProps = {\n  animateHeight: true,\n  transitionDuration: 500,\n  transitionTimingFunction: 'ease',\n  keepViewsMounted: false,\n  prefixer: new _inlineStylePrefixer.default(),\n  style: {},\n  viewportStyle: {},\n  rtl: false,\n  spacing: 1\n};\nexports.defaultProps = defaultProps;\n\nfunction applyDefaults(props) {\n  const result = _objectSpread({}, props);\n\n  for (const key in defaultProps) {\n    if (defaultProps.hasOwnProperty(key) && props[key] == null) {\n      result[key] = defaultProps[key];\n    }\n  }\n\n  return result;\n}\n\nclass ViewSlider extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      height: undefined,\n      transitioning: false,\n      activeView: this.props.activeView,\n      // this is used to determine the correct transitionState for the previous active view.\n      prevActiveView: null\n    });\n\n    _defineProperty(this, \"views\", []);\n\n    _defineProperty(this, \"timeouts\", {});\n\n    _defineProperty(this, \"lastProps\", this.props);\n\n    _defineProperty(this, \"getDefaultedProps\", () => {\n      if (this.lastProps !== this.props || !this.lastDefaultedProps) {\n        this.lastProps = this.props;\n        this.lastDefaultedProps = applyDefaults(this.props);\n      }\n\n      return this.lastDefaultedProps;\n    });\n\n    _defineProperty(this, \"measureHeight\", node => {\n      if (!node) return null;\n      return node.clientHeight;\n    });\n\n    _defineProperty(this, \"onTransitionEnd\", event => {\n      // ignore transitionend events from deeper components\n      if (event && event.target !== this.viewport) return; // phase 0: unset height and disable transitions\n\n      this.setState({\n        height: undefined,\n        prevActiveView: null,\n        transitioning: false\n      });\n    });\n\n    _defineProperty(this, \"getTransitionState\", childIndex => {\n      const {\n        activeView,\n        prevActiveView\n      } = this.state;\n      if (prevActiveView == null) return childIndex === activeView ? 'in' : 'out';\n      if (childIndex === activeView) return 'entering';\n      if (childIndex === prevActiveView) return 'leaving';\n      return 'out';\n    });\n\n    _defineProperty(this, \"renderView\", index => {\n      const {\n        fillParent,\n        prefixer,\n        keepViewsMounted,\n        spacing,\n        rtl,\n        viewStyle,\n        innerViewWrapperStyle\n      } = this.getDefaultedProps();\n      const {\n        activeView,\n        transitioning\n      } = this.state;\n\n      const style = _objectSpread({}, baseViewStyle, viewStyle);\n\n      if (fillParent) {\n        Object.assign(style, fillStyle);\n        style.overflow = 'auto';\n        if (rtl) style.right = `${index * spacing * 100}%`;else style.left = `${index * spacing * 100}%`;\n      } else if (index > 0) {\n        if (rtl) style.marginRight = `${(spacing - 1) * 100}%`;else style.marginLeft = `${(spacing - 1) * 100}%`;\n      } // when not transitioning, render empty placeholder divs before the active view to push it into the right\n      // horizontal position\n\n\n      if (!transitioning && activeView !== index && !keepViewsMounted) {\n        return React.createElement(\"div\", {\n          key: index,\n          style: prefixer.prefix(style)\n        });\n      }\n\n      return React.createElement(\"div\", {\n        key: index,\n        style: prefixer.prefix(style),\n        ref: c => this.views[index] = c\n      }, React.createElement(\"div\", {\n        style: prefixer.prefix(_objectSpread({\n          width: '100%'\n        }, innerViewWrapperStyle))\n      }, React.createElement(_reactTransitionContext.TransitionContext, {\n        state: this.getTransitionState(index)\n      }, this.props.renderView({\n        index,\n        active: index === activeView,\n        transitionState: this.getTransitionState(index)\n      }))));\n    });\n\n    _defineProperty(this, \"animateHeight\", () => {\n      const {\n        animateHeight,\n        fillParent,\n        keepViewsMounted\n      } = this.getDefaultedProps();\n      return animateHeight && !fillParent && !keepViewsMounted;\n    });\n\n    _defineProperty(this, \"rootRef\", node => {\n      this.root = node;\n      const {\n        rootRef\n      } = this.getDefaultedProps();\n      if (rootRef) rootRef(node);\n    });\n\n    _defineProperty(this, \"viewportRef\", node => {\n      this.viewport = node;\n      const {\n        viewportRef\n      } = this.getDefaultedProps();\n      if (viewportRef) viewportRef(node);\n    });\n  }\n\n  setTimeout(name, callback, delay) {\n    if (this.timeouts[name]) clearTimeout(this.timeouts[name]);\n    this.timeouts[name] = setTimeout(callback, delay);\n  }\n\n  componentDidUpdate() {\n    const {\n      activeView,\n      transitionDuration,\n      keepViewsMounted\n    } = this.getDefaultedProps();\n    let newState;\n\n    if (activeView !== this.state.activeView && this.state.height === undefined) {\n      if (keepViewsMounted) {\n        // scroll all views except the current back to the top\n        for (let i = 0; i < this.views.length; i++) {\n          if (i === this.state.activeView) continue;\n          if (this.views[i]) this.views[i].scrollTop = 0;\n        }\n      } // phase 1: set current height\n\n\n      newState = {\n        height: this.measureHeight(this.views[this.state.activeView])\n      };\n    } else if (this.state.height !== undefined && !this.state.transitioning) {\n      // phase 2: enable transitions\n      newState = {\n        transitioning: true\n      };\n    } else if (activeView !== this.state.activeView) {\n      // phase 3: change height/activeView\n      newState = {\n        activeView,\n        prevActiveView: this.state.activeView,\n        height: this.measureHeight(this.views[activeView])\n      };\n    }\n\n    const finalNewState = newState;\n    if (!finalNewState) return;\n    this.setState(finalNewState, () => {\n      if (finalNewState.activeView != null) {\n        this.setTimeout('onTransitionEnd', this.onTransitionEnd, transitionDuration);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    for (let name in this.timeouts) clearTimeout(this.timeouts[name]);\n  }\n\n  render() {\n    const {\n      style,\n      className,\n      viewportClassName,\n      viewportStyle,\n      numViews,\n      prefixer,\n      fillParent,\n      transitionDuration,\n      transitionTimingFunction,\n      keepViewsMounted,\n      rtl,\n      spacing\n    } = this.getDefaultedProps();\n    const animateHeight = this.animateHeight();\n    const {\n      activeView,\n      height,\n      transitioning\n    } = this.state;\n\n    const finalOuterStyle = _objectSpread({\n      transitionProperty: 'height',\n      transitionDuration: `${transitionDuration}ms`,\n      transitionTimingFunction,\n      overflow: 'hidden',\n      height: animateHeight && height != null ? height : undefined\n    }, style);\n\n    const finalViewportStyle = _objectSpread({\n      position: 'relative',\n      transform: `translateX(${activeView * spacing * (rtl ? 100 : -100)}%)`,\n      whiteSpace: 'nowrap',\n      minHeight: '100%',\n      direction: rtl ? 'rtl' : 'ltr',\n      transition: transitioning ? `transform ${transitionTimingFunction} ${transitionDuration}ms` : undefined\n    }, viewportStyle);\n\n    if (fillParent) {\n      Object.assign(finalOuterStyle, fillStyle);\n      Object.assign(finalViewportStyle, fillStyle);\n    } // when not transitioning, render empty placeholder divs before the active view to push it into the right\n    // horizontal position\n\n\n    const views = [];\n\n    for (let i = 0; i < (transitioning || keepViewsMounted ? numViews : activeView + 1); i++) {\n      views[i] = this.renderView(i);\n    }\n\n    return React.createElement(\"div\", {\n      style: prefixer.prefix(finalOuterStyle),\n      className: className,\n      ref: this.rootRef\n    }, React.createElement(\"div\", {\n      className: viewportClassName,\n      style: prefixer.prefix(finalViewportStyle),\n      ref: this.viewportRef,\n      onTransitionEnd: this.onTransitionEnd\n    }, views));\n  }\n\n}\n\nexports.default = ViewSlider;"]},"metadata":{},"sourceType":"script"}