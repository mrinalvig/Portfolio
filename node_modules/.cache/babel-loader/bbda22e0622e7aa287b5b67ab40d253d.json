{"ast":null,"code":"// EntityLiving classes\n// Used for all 'living' entities\n// Such as the player and enemies\n// Maybe eventually move to its own file\nfunction EntityLiving() {\n  GameObject.call(this);\n  this.health = 30;\n  this.immunity = 0; // immunity timer\n\n  this.moveSpeed = 100;\n} // Inherit from GameObject\n\n\n_c = EntityLiving;\nEntityLiving.prototype = Object.create(GameObject.prototype);\nEntityLiving.prototype.constructor = EntityLiving; // Just damage the living entity\n\nEntityLiving.prototype.damage = function (amount) {\n  if (this.immunity <= 0) {\n    this.health -= amount;\n    this.immunity = 1;\n    this.hurtSound.play();\n\n    if (this.health <= 0) {\n      // Entity dead\n      // Do something\n      var an = new AnBox(poofAnim, \"poof\");\n      an.position = this.position.sub(new Vector2((an.size.x - this.size.x) / 2, (an.size.y - this.size.y) / 2));\n      objs.push(an);\n      delObject(this);\n      enemyKilled.play();\n    }\n  }\n};\n\nEntityLiving.prototype.update = function (deltaTime) {//if (this.immunity > 0)\n};\n\nfunction hasClass(el, className) {\n  if (el.classList) return el.classList.contains(className);\n  return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\n}\n\nfunction addClass(el, className) {\n  if (el.classList) el.classList.add(className);else if (!hasClass(el, className)) el.className += \" \" + className;\n}\n\nfunction removeClass(el, className) {\n  if (el.classList) el.classList.remove(className);else if (hasClass(el, className)) {\n    var reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n    el.className = el.className.replace(reg, ' ');\n  }\n}\n\nEntityLiving.prototype.draw = function (deltaTime) {\n  if (this.immunity > 0) {\n    var t = Math.floor(this.immunity * 9) % 2;\n\n    if (t == 1) {\n      addClass(this.elem, \"damaged\");\n    } else {\n      removeClass(this.elem, \"damaged\");\n    }\n\n    this.immunity -= deltaTime;\n  }\n\n  GameObject.prototype.draw.call(this, deltaTime);\n};\n\nfunction Player() {\n  EntityLiving.call(this);\n  this.size = new Vector2(16, 10);\n  this.animator = new Animator(linkAnim, this);\n  this.animator.setAnim(\"idle_down\");\n  this.hurtSound = linkHurt;\n  this.cooldown = 0;\n  this.health = 100;\n  this.dir = 0; // Represents the direction\n\n  this.item = 0;\n  this.qty = [12, 12, 12]; // 0 -> down\n  // 1 -> right\n  // 2 -> up\n  // 3 -> left\n  // TODO: Add inventory\n} // Inherit from EntityLiving\n\n\n_c2 = Player;\nPlayer.prototype = Object.create(EntityLiving.prototype);\nPlayer.prototype.constructor = Player;\n/*Player.prototype.bomb = function() {\n\tvar b = new Bomb();\n\tb.position = in front of player;\n\n\tobjs.push(b);\n}*/\n\nPlayer.prototype.damage = function (amount) {\n  EntityLiving.prototype.damage.call(this, amount);\n  LifeBar(Math.floor(this.health / 10));\n};\n\nPlayer.prototype.update = function (deltaTime) {\n  var speed = this.moveSpeed;\n  var move = new Vector2(0, 0); // How much the player will move\n  // If the player just hit the attack button, prepare for the attack\n  // Check both attack and !pAttack so we can know this is the first frame\n  // that the attack button was pressed\n\n  if (input.attack && !pInput.attack && !this.animator.anim.name.startsWith(\"attack\")) {\n    var pos;\n    var size;\n\n    if (this.dir == 0) {\n      this.animator.setAnim(\"attack_down\");\n      pos = new Vector2(-5, 3);\n      size = new Vector2(30, 20);\n    } else if (this.dir == 1) {\n      this.animator.setAnim(\"attack_right\");\n      pos = new Vector2(12, -15);\n      size = new Vector2(20, 30);\n    } else if (this.dir == 2) {\n      this.animator.setAnim(\"attack_up\");\n      pos = new Vector2(-9, -24);\n      size = new Vector2(30, 20);\n    } else if (this.dir == 3) {\n      this.animator.setAnim(\"attack_left\");\n      pos = new Vector2(-16, -15);\n      size = new Vector2(20, 30);\n    }\n\n    if (swordSlash.playing) swordSlash.stop();\n    swordSlash.play(); // Create damage box\n\n    var db = new DmgBox(this, 1 / 5, 10);\n    db.position = this.position.add(pos);\n    db.size = size;\n    objs.push(db);\n  }\n\n  if (input.use && !pInput.use && this.cooldown <= 0) {\n    var pos;\n\n    if (this.dir == 0) {\n      pos = new Vector2(2, 14);\n    } else if (this.dir == 1) {\n      pos = new Vector2(20, -1);\n    } else if (this.dir == 2) {\n      pos = new Vector2(2, -14);\n    } else if (this.dir == 3) {\n      pos = new Vector2(-16, -1);\n    }\n\n    var btemp = {\n      position: this.position.add(pos),\n      size: new Vector2(12, 12)\n    };\n    var col = false;\n\n    for (var j = 0; j < collisionMap.length; j++) {\n      for (var k = 0; k < collisionMap[j].length; k++) {\n        if (collisionMap[j][k] == true) {\n          // Create a spoof gameobject for the collides function\n          var temp = {\n            position: new Vector2(k * 16, j * 16),\n            size: new Vector2(16, 16)\n          };\n\n          if (collides(btemp, temp) == true) {\n            col = true;\n            break;\n          }\n        }\n      }\n    }\n\n    if (col == false) {\n      if (this.item != 2) {\n        if (this.qty[this.item] > 0) {\n          this.cooldown = 2;\n\n          var _bomb;\n\n          if (this.item == 0) {\n            _bomb = new Bomb();\n            bombDrop.play();\n          } else if (this.item == 1) {\n            _bomb = new Arrow(this.dir);\n            arrowShoot.play();\n          }\n\n          _bomb.position = btemp.position;\n          objs.push(_bomb);\n          this.qty[this.item] -= 1;\n          ItemBar(this.item, this.qty[this.item]);\n          ItemHUD();\n        }\n      } else {\n        if (this.qty[2] > 0) {\n          this.health += 10;\n          if (this.health > 100) this.health = 100;\n          LifeBar(Math.floor(this.health / 10));\n          this.qty[2] -= 1;\n          ItemBar(this.item, this.qty[2]);\n          ItemHUD();\n          potionHeal.play();\n        }\n      }\n    } else {\n      pauseOpen.play();\n    }\n    /*// Call item function\n    if (bow equiped) {\n     // Bow function\n    } else if (bomb equipped) {\n     // Bomb function\n    }*/\n\n  } else {\n    this.cooldown -= deltaTime;\n  }\n\n  if (this.animator.anim.name.startsWith(\"attack\") && this.animator.playing == false) {\n    if (this.dir == 0) {\n      this.animator.setAnim(\"idle_down\");\n    } else if (this.dir == 1) {\n      this.animator.setAnim(\"idle_right\");\n    } else if (this.dir == 2) {\n      this.animator.setAnim(\"idle_up\");\n    } else if (this.dir == 3) {\n      this.animator.setAnim(\"idle_left\");\n    }\n\n    this.animator.play();\n  }\n\n  if (!this.animator.anim.name.startsWith(\"attack\")) {\n    // Add to the move vector based on input\n    if (input.left) {\n      move = move.sub(1, 0);\n      this.dir = 3; // Set the direction\n    }\n\n    if (input.right) {\n      move = move.add(1, 0);\n      this.dir = 1;\n    }\n\n    if (input.up) {\n      move = move.sub(0, 1);\n      this.dir = 2;\n    }\n\n    if (input.down) {\n      move = move.add(0, 1);\n      this.dir = 0;\n    } // Only play the walking animation if the walk vector isn't 0\n\n\n    if (move.magnitude() > 0) {\n      if (this.dir == 0) {\n        this.animator.setAnim(\"walk_down\");\n      } else if (this.dir == 1) {\n        this.animator.setAnim(\"walk_right\");\n      } else if (this.dir == 2) {\n        this.animator.setAnim(\"walk_up\");\n      } else if (this.dir == 3) {\n        this.animator.setAnim(\"walk_left\");\n      }\n    } else {\n      if (this.dir == 0) {\n        this.animator.setAnim(\"idle_down\");\n      } else if (this.dir == 1) {\n        this.animator.setAnim(\"idle_right\");\n      } else if (this.dir == 2) {\n        this.animator.setAnim(\"idle_up\");\n      } else if (this.dir == 3) {\n        this.animator.setAnim(\"idle_left\");\n      }\n    }\n  }\n\n  move = move.normalize(); // Normalize so that diagonal movement isn't faster\n  // We multiply the move vector by the speed and deltaTime\n  // We do deltaTime so that the movement will remain consistent despite frame rate fluctuation\n  // Basically it means we move in units per second, not units per frame\n\n  move = move.mul(speed);\n  if (this.immunity <= 0.75) this.velocity = move;\n  EntityLiving.prototype.update.call(this, deltaTime);\n};\n\nPlayer.prototype.draw = function (deltaTime) {\n  this.animator.play();\n  this.animator.update(deltaTime, this);\n  this.elem.style.backgroundPosition = -this.sprite.x + \"px \" + -this.sprite.y + \"px\"; // Call the base version of the draw\n\n  EntityLiving.prototype.draw.call(this, deltaTime);\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EntityLiving\");\n$RefreshReg$(_c2, \"Player\");","map":{"version":3,"sources":["/Users/mrinalvig/Documents/Projects/Portfolio/src/Player.js"],"names":["EntityLiving","GameObject","call","health","immunity","moveSpeed","prototype","Object","create","constructor","damage","amount","hurtSound","play","an","AnBox","poofAnim","position","sub","Vector2","size","x","y","objs","push","delObject","enemyKilled","update","deltaTime","hasClass","el","className","classList","contains","match","RegExp","addClass","add","removeClass","remove","reg","replace","draw","t","Math","floor","elem","Player","animator","Animator","linkAnim","setAnim","linkHurt","cooldown","dir","item","qty","LifeBar","speed","move","input","attack","pInput","anim","name","startsWith","pos","swordSlash","playing","stop","db","DmgBox","use","btemp","col","j","collisionMap","length","k","temp","collides","_bomb","Bomb","bombDrop","Arrow","arrowShoot","ItemBar","ItemHUD","potionHeal","pauseOpen","left","right","up","down","magnitude","normalize","mul","velocity","style","backgroundPosition","sprite"],"mappings":"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","sourcesContent":["// EntityLiving classes\n// Used for all 'living' entities\n// Such as the player and enemies\n// Maybe eventually move to its own file\nfunction EntityLiving() {\n     GameObject.call(this);\n     this.health = 30;\n     this.immunity = 0; // immunity timer\n\t this.moveSpeed = 100;\n}\n\n// Inherit from GameObject\nEntityLiving.prototype = Object.create(GameObject.prototype);\nEntityLiving.prototype.constructor = EntityLiving;\n\n// Just damage the living entity\nEntityLiving.prototype.damage = function(amount) {\n    if (this.immunity <= 0) {\n         this.health -= amount;\n         this.immunity = 1;\n\t\t this.hurtSound.play();\n         if (this.health <= 0) {\n              // Entity dead\n              // Do something\n\t\t\t  var an = new AnBox(poofAnim, \"poof\");\n\t\t\t  an.position = this.position.sub(new Vector2((an.size.x - this.size.x) / 2,(an.size.y - this.size.y) / 2));\n\t\t\t  objs.push(an);\n\t\t\t  delObject(this);\n\t\t\t  enemyKilled.play();\n         }\n    }\n}\n\nEntityLiving.prototype.update = function(deltaTime) {\n    //if (this.immunity > 0)\n}\n\nfunction hasClass(el, className) {\n    if (el.classList)\n        return el.classList.contains(className);\n    return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\n}\n\nfunction addClass(el, className) {\n    if (el.classList)\n        el.classList.add(className)\n    else if (!hasClass(el, className))\n        el.className += \" \" + className;\n}\n\nfunction removeClass(el, className) {\n    if (el.classList)\n        el.classList.remove(className)\n    else if (hasClass(el, className))\n    {\n        var reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n        el.className = el.className.replace(reg, ' ');\n    }\n}\n\nEntityLiving.prototype.draw = function(deltaTime) {\n    if (this.immunity > 0) {\n        var t = Math.floor(this.immunity * 9) % 2;\n        if (t == 1) {\n            addClass(this.elem, \"damaged\");\n        } else {\n            removeClass(this.elem, \"damaged\");\n        }\n\n\n        this.immunity -= deltaTime;\n    }\n\n    GameObject.prototype.draw.call(this, deltaTime);\n}\n\nfunction Player() {\n     EntityLiving.call(this);\n     this.size = new Vector2(16, 10);\n     this.animator = new Animator(linkAnim, this);\n     this.animator.setAnim(\"idle_down\");\n\t this.hurtSound = linkHurt;\n\t this.cooldown = 0;\n\t this.health = 100;\n\n     this.dir = 0;                          // Represents the direction\n\t this.item = 0;\n\t this.qty = [12, 12, 12];\n      // 0 -> down\n      // 1 -> right\n      // 2 -> up\n      // 3 -> left\n\n     // TODO: Add inventory\n}\n\n// Inherit from EntityLiving\nPlayer.prototype = Object.create(EntityLiving.prototype);\nPlayer.prototype.constructor = Player;\n\n/*Player.prototype.bomb = function() {\n\tvar b = new Bomb();\n\tb.position = in front of player;\n\n\tobjs.push(b);\n}*/\n\nPlayer.prototype.damage = function(amount) {\n\tEntityLiving.prototype.damage.call(this, amount);\n\t\n\tLifeBar(Math.floor(this.health / 10));\n}\n\nPlayer.prototype.update = function(deltaTime) {\n\t var speed = this.moveSpeed;\n\n\n     var move = new Vector2(0, 0); // How much the player will move\n\n     // If the player just hit the attack button, prepare for the attack\n     // Check both attack and !pAttack so we can know this is the first frame\n     // that the attack button was pressed\n     if (input.attack && !pInput.attack && !this.animator.anim.name.startsWith(\"attack\")) {\n         var pos;\n         var size;\n         if (this.dir == 0) {\n             this.animator.setAnim(\"attack_down\");\n             pos = new Vector2(-5, 3);\n             size = new Vector2(30, 20);\n         } else if (this.dir == 1) {\n             this.animator.setAnim(\"attack_right\");\n             pos = new Vector2(12, -15);\n             size = new Vector2(20, 30);\n         } else if (this.dir == 2) {\n             this.animator.setAnim(\"attack_up\");\n             pos = new Vector2(-9, -24);\n             size = new Vector2(30, 20);\n         } else if (this.dir == 3) {\n             this.animator.setAnim(\"attack_left\");\n             pos = new Vector2(-16, -15);\n             size = new Vector2(20, 30);\n         }\n\n         if (swordSlash.playing) swordSlash.stop();\n\t\t swordSlash.play();\n\n         // Create damage box\n         var db = new DmgBox(this, 1/5, 10);\n         db.position = this.position.add(pos);\n         db.size = size;\n         objs.push(db);\n\n     }\n\n\n\t if (input.use && !pInput.use && this.cooldown <= 0) {\n\n\t\t var pos;\n         if (this.dir == 0) {\n             pos = new Vector2(2, 14);\n         } else if (this.dir == 1) {\n             pos = new Vector2(20, -1);\n         } else if (this.dir == 2) {\n             pos = new Vector2(2, -14);\n         } else if (this.dir == 3) {\n             pos = new Vector2(-16, -1);\n         }\n         \n         var btemp = {position: this.position.add(pos), size: new Vector2(12, 12)};\n         var col = false;\n\n         for (var j = 0; j < collisionMap.length; j++) {\n             for (var k = 0; k < collisionMap[j].length; k++) {\n                 if (collisionMap[j][k] == true) {\n                     // Create a spoof gameobject for the collides function\n                     var temp = {position: new Vector2(k * 16, j * 16), size: new Vector2(16, 16)};\n                     if (collides(btemp, temp) == true) {\n                         col = true;\n                         break;\n                     }\n                 }\n             }\n         }\n\n         if (col == false) {\n\t\t\t if (this.item != 2) {\n\t\t\t\t if (this.qty[this.item] > 0) {\n\t\t\t\t\t this.cooldown = 2;\n\t\t\t\t\t var _bomb;\n\t\t\t\t\t if (this.item == 0) {\n\t\t\t\t\t\t _bomb = new Bomb();\n\t\t\t\t\t bombDrop.play();\n\t\t\t\t\t }\n\t\t\t\t\t else if (this.item == 1) {\n\t\t\t\t\t\t _bomb = new Arrow(this.dir);\n\t\t\t\t\t\t arrowShoot.play();\n\t\t\t\t\t }\n\t\t\t\t\t _bomb.position = btemp.position;\n\t\t\t\t\t objs.push(_bomb);\n\t\t\t\t\t this.qty[this.item] -= 1;\n\t\t\t\t\t ItemBar(this.item, this.qty[this.item]);\n\t\t\t\t\t ItemHUD();\n\t\t\t\t }\n\t\t\t } else {\n\t\t\t\t if (this.qty[2] > 0) {\n\t\t\t\t\t this.health += 10;\n\t\t\t\t\t if (this.health > 100) this.health = 100;\n\t\t\t\t\t LifeBar(Math.floor(this.health / 10));\n\t\t\t\t\t this.qty[2] -= 1;\n\t\t\t\t\t ItemBar(this.item, this.qty[2]);\n\t\t\t\t\t ItemHUD();\n\t\t\t\t\t potionHeal.play();\n\t\t\t\t }\n\t\t\t }\n         } else {\n             pauseOpen.play();\n         }\n\n\t\t /*// Call item function\n\t\t if (bow equiped) {\n\t\t\t // Bow function\n\t\t } else if (bomb equipped) {\n\t\t\t // Bomb function\n\t\t }*/\n\t } else {\n\t\t this.cooldown -= deltaTime;\n\t }\n\n     if (this.animator.anim.name.startsWith(\"attack\") && this.animator.playing == false) {\n          if (this.dir == 0) {\n              this.animator.setAnim(\"idle_down\");\n          } else if (this.dir == 1) {\n              this.animator.setAnim(\"idle_right\");\n          } else if (this.dir == 2) {\n              this.animator.setAnim(\"idle_up\");\n          } else if (this.dir == 3) {\n              this.animator.setAnim(\"idle_left\");\n          }\n          this.animator.play();\n     }\n\n\n     if (!this.animator.anim.name.startsWith(\"attack\")) {\n          // Add to the move vector based on input\n          if (input.left) {\n               move = move.sub(1, 0);\n               this.dir = 3; // Set the direction\n          }\n\n          if (input.right) {\n               move = move.add(1, 0);\n               this.dir = 1;\n          }\n\n          if (input.up) {\n               move = move.sub(0, 1);\n               this.dir = 2;\n          }\n\n          if (input.down) {\n               move = move.add(0, 1);\n               this.dir = 0;\n          }\n\n          // Only play the walking animation if the walk vector isn't 0\n          if (move.magnitude() > 0) {\n\t\t\t   if (this.dir == 0) {\n\t\t\t\t   this.animator.setAnim(\"walk_down\");\n\t\t\t   } else if (this.dir == 1) {\n\t\t\t\t   this.animator.setAnim(\"walk_right\");\n\t\t\t   } else if (this.dir == 2) {\n\t\t\t\t   this.animator.setAnim(\"walk_up\");\n\t\t\t   } else if (this.dir == 3) {\n\t\t\t\t   this.animator.setAnim(\"walk_left\");\n\t\t\t   }\n          } else {\n\t\t\t   if (this.dir == 0) {\n\t\t\t\t   this.animator.setAnim(\"idle_down\");\n\t\t\t   } else if (this.dir == 1) {\n\t\t\t\t   this.animator.setAnim(\"idle_right\");\n\t\t\t   } else if (this.dir == 2) {\n\t\t\t\t   this.animator.setAnim(\"idle_up\");\n\t\t\t   } else if (this.dir == 3) {\n\t\t\t\t   this.animator.setAnim(\"idle_left\");\n\t\t\t   }\n          }\n     }\n\n     move = move.normalize(); // Normalize so that diagonal movement isn't faster\n\n     // We multiply the move vector by the speed and deltaTime\n     // We do deltaTime so that the movement will remain consistent despite frame rate fluctuation\n     // Basically it means we move in units per second, not units per frame\n     move = move.mul(speed);\n     if (this.immunity <= 0.75)\n        this.velocity = move;\n\n     EntityLiving.prototype.update.call(this, deltaTime);\n}\n\nPlayer.prototype.draw = function(deltaTime) {\n    this.animator.play();\n    this.animator.update(deltaTime, this);\n\n \tthis.elem.style.backgroundPosition = -this.sprite.x + \"px \" + -this.sprite.y + \"px\";\n\n    // Call the base version of the draw\n    EntityLiving.prototype.draw.call(this, deltaTime);\n}\n"]},"metadata":{},"sourceType":"module"}