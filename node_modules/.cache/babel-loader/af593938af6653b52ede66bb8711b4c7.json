{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/mrinalvig/Documents/Projects/portfolio2/src/App.js\";\nimport logo from './favicon.png';\nimport wheel from './wheel.gif';\nimport './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.state.loaded ? 'ajax-loaded' : 'ajax-loading',\n      children: \"LOADING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n    /* The class ajax-loaded -- you guessed it, hides the div */\n\n    /* The thing to always keep in mind -- when state changes, things happen! */\n    ;\n\n    this.state = {\n      logo: true\n    };\n    this.loading = this.loading.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.loading) {\n      this.setState({\n        logo: false\n      });\n    }\n  }\n\n  render() {\n    if (this.state.logo === false) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), this.loading()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (this.state.logo === true) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: this.loading()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mrinalvig/Documents/Projects/portfolio2/src/App.js"],"names":["logo","wheel","React","App","Component","constructor","props","loading","state","loaded","bind","componentDidMount","setState","render"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,OAhBmB,GAgBT,mBACR;AAAK,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,MAAX,GAAkB,aAAlB,GAAgC,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AACA;AAnBiB;;AAEjB,SAAKD,KAAL,GAAY;AACVR,MAAAA,IAAI,EAAE;AADI,KAAZ;AAGA,SAAKO,OAAL,GAAe,KAAKA,OAAL,CAAaG,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAG,KAAKJ,OAAR,EAAiB;AACf,WAAKK,QAAL,CAAc;AACZZ,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD;AACF;;AAQDa,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKL,KAAL,CAAWR,IAAX,KAAoB,KAAvB,EAA8B;AAC5B,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKO,OAAL,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;;AAED,QAAG,KAAKC,KAAL,CAAWR,IAAX,KAAoB,IAAvB,EAA6B;AAC3B,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACG,KAAKO,OAAL;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AAxC+B;;AA2ClC,eAAeJ,GAAf","sourcesContent":["import logo from './favicon.png';\nimport wheel from './wheel.gif';\nimport './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      logo: true\n    }\n    this.loading = this.loading.bind(this);\n  }\n\n  componentDidMount() {\n    if(this.loading) {\n      this.setState({\n        logo: false\n      })\n    }\n  }\n\n  loading = () => (\n    <div className={this.state.loaded?'ajax-loaded':'ajax-loading'}>LOADING</div>\n    /* The class ajax-loaded -- you guessed it, hides the div */\n    /* The thing to always keep in mind -- when state changes, things happen! */\n );\n\n  render() {\n    if(this.state.logo === false) {\n      return (\n        <div className=\"App\">\n          <img src={logo} />\n          {this.loading()}\n        </div>\n      );\n    }\n\n    if(this.state.logo === true) {\n      return (\n        <div className=\"App\">\n          {this.loading()}\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}